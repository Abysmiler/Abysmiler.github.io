{"title":"后端入门--GO语言学习","uid":"e38cf29d68826256ee0466da40a4b793","slug":"后端入门-GO语言学习","date":"2023-07-25T07:15:40.000Z","updated":"2023-07-25T15:55:12.108Z","comments":true,"path":"api/articles/后端入门-GO语言学习.json","keywords":null,"cover":[],"content":"<h1 id=\"DAY1-Go-语言基础语法\"><a href=\"#DAY1-Go-语言基础语法\" class=\"headerlink\" title=\"DAY1 Go 语言基础语法\"></a>DAY1 Go 语言基础语法</h1><h2 id=\"走进Go语言基础语法\"><a href=\"#走进Go语言基础语法\" class=\"headerlink\" title=\"走进Go语言基础语法\"></a>走进Go语言基础语法</h2><h3 id=\"什么是Go语言\"><a href=\"#什么是Go语言\" class=\"headerlink\" title=\"什么是Go语言\"></a>什么是Go语言</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">1.高性能、高并发\n2.语法简单、学习曲线平缓\n3.丰富的标准库\n4.完善的工具链\n5.静态链接\n6.快速编译\n7.跨平台\n8.垃圾回收</code></pre>\n\n<p>示例：</p>\n<p><img src=\"https://gitee.com/ImgsBed_1_1/imgsbed/raw/master/Img/1.png\" alt=\"1\"></p>\n<h3 id=\"哪些公司在使用Go语言\"><a href=\"#哪些公司在使用Go语言\" class=\"headerlink\" title=\"哪些公司在使用Go语言\"></a>哪些公司在使用Go语言</h3><p><img src=\"https://gitee.com/ImgsBed_1_1/imgsbed/raw/master/Img/202307251639134.png\" alt=\"image\"></p>\n<h3 id=\"基础语法\"><a href=\"#基础语法\" class=\"headerlink\" title=\"基础语法\"></a>基础语法</h3><h4 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World\"></a>Hello World</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport(\n\t&quot;fmt&quot;\n)\nfunc main() &#123;\n\tfmt.Println(&quot;Hello World&quot;)\n&#125;</code></pre>\n\n<h4 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport(\n\t&quot;fmt&quot;\n\t&quot;math&quot;\n)\nfunc main() &#123;\n\n\tvar a &#x3D;&quot;initial&quot;\n\tvar b,c int &#x3D;1,2\n\tvar d &#x3D;true\n\tvar e float64\n\tf:&#x3D;float32(e)\n\tg:&#x3D;a+&quot;foo&quot;\n\n\tfmt.Println(a,b,c,d,e,f)\n\tfmt.Println(g)\n\n\tconst s string &#x3D; &quot;constant&quot;\n\tconst h &#x3D;500000000\n\tconst i &#x3D;3e20&#x2F;h\n\tfmt.Println(s,h,i,math.Sin(h),math.Sin(i))\n&#125;</code></pre>\n\n<h4 id=\"If-else\"><a href=\"#If-else\" class=\"headerlink\" title=\"If else\"></a>If else</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n\n\tif 7%2 &#x3D;&#x3D; 0 &#123;\n\t\tfmt.Print(&quot;7 is even&quot;)\n\t&#125;else&#123;\n\t\tfmt.Print(&quot;7 is odd&quot;)\n\t&#125;\n\n\tif 8%4 &#x3D;&#x3D; 0 &#123;\n\t\tfmt.Print(&quot;8 is divisible by 4&quot;)\n\t&#125;\n\n\tif num :&#x3D;9; num &lt; 0 &#123;\n\t\tfmt.Print(num,&quot;is negative&quot;)\n\t&#125;else if num &lt; 10 &#123;\n\t\tfmt.Print(num, &quot;has 1 digit&quot;)\n\t&#125;else&#123;\n\t\tfmt.Print(num,&quot;has multiple digits&quot;)\n\t&#125;\n&#125;</code></pre>\n\n<h4 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h4><pre class=\"line-numbers language-GO\" data-language=\"GO\"><code class=\"language-GO\">package main\n\nimport (\n\t&quot;fmt&quot;\n)\n\nfunc main() &#123;\n\n\ti :&#x3D; 1\n\tfor &#123;\n\t\tfmt.Println(&quot;loop&quot;)\n\t\tbreak\n\t&#125;\n\tfor j :&#x3D; 7; j &lt; 9; j++ &#123;\n\t\tfmt.Println(j)\n\t&#125;\n\tfor n :&#x3D; 0; n &lt; 5; n++ &#123;\n\t\tif n%2 &#x3D;&#x3D; 0 &#123;\n\t\t\tcontinue\n\t\t&#125;\n\t\tfmt.Println(n)\n\t&#125;\n\tfor i &lt;&#x3D; 3 &#123;\n\t\tfmt.Println(i)\n\t\ti &#x3D; i + 1\n\t&#125;\n&#125;</code></pre>\n\n<h4 id=\"Switch\"><a href=\"#Switch\" class=\"headerlink\" title=\"Switch\"></a>Switch</h4><pre class=\"line-numbers language-GO\" data-language=\"GO\"><code class=\"language-GO\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\nfunc main() &#123;\n\n\ta :&#x3D;2\n\tswitch a &#123;\n\tcase 1:\n\t\tfmt.Println(&quot;one&quot;)\n\tcase 2:\n\t\tfmt.Println(&quot;two&quot;)\n\tcase 3:\n\t\tfmt.Println(&quot;three&quot;)\n\tcase 4,5:\n\t\tfmt.Println(&quot;four or five&quot;)\n\tdefault:\n\t\tfmt.Println(&quot;other&quot;)\n\t&#125;\n\t\n\tt :&#x3D; time.Now()\n\tswitch &#123;\n\tcase t.Hour()&lt;12:\n\t\tfmt.Println(&quot;It&#39;s before noon&quot;)\n\tdefault:\n\t\tfmt.Println(&quot;It&#39;s after noon&quot;)\n\t&#125;\n    \n&#125;\n</code></pre>\n\n<h4 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n\n\tvar a [5]int\n\ta[4] &#x3D; 100\n\tfmt.Println(a[4], len(a))\n\n\tb :&#x3D; [5]int&#123;1, 2, 3, 4, 5&#125;\n\tfmt.Println(b)\n\n\tvar twoD [2][3]int\n\tfor i :&#x3D; 0; i &lt; 2; i++ &#123;\n\t\tfor j :&#x3D; 0; j &lt; 3; j++ &#123;\n\t\t\ttwoD[i][j] &#x3D; i + j\n\t\t&#125;\n\t&#125;\n\tfmt.Println(&quot;2d: &quot;, twoD)\n&#125;\n</code></pre>\n\n<h4 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n\n\ts :&#x3D; make([]string, 3)\n\ts[0] &#x3D; &quot;a&quot;\n\ts[1] &#x3D; &quot;b&quot;\n\ts[2] &#x3D; &quot;c&quot;\n\tfmt.Println(&quot;get:&quot;, s[2])   &#x2F;&#x2F; c\n\tfmt.Println(&quot;len:&quot;, len(s)) &#x2F;&#x2F; 3\n\n\ts &#x3D; append(s, &quot;d&quot;)\n\ts &#x3D; append(s, &quot;e&quot;, &quot;f&quot;)\n\tfmt.Println(s) &#x2F;&#x2F; [a b c d e f]\n\n\tc :&#x3D; make([]string, len(s))\n\tcopy(c, s)\n\tfmt.Println(c) &#x2F;&#x2F; [a b c d e f]\n\n\tfmt.Println(s[2:5]) &#x2F;&#x2F; [c d e]\n\tfmt.Println(s[:5])  &#x2F;&#x2F; [a b c d e]\n\tfmt.Println(s[2:])  &#x2F;&#x2F; [c d e f]\n\n\tgood :&#x3D; []string&#123;&quot;g&quot;, &quot;o&quot;, &quot;o&quot;, &quot;d&quot;&#125;\n\tfmt.Println(good) &#x2F;&#x2F; [g o o d]\n&#125;</code></pre>\n\n<h4 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n\tm :&#x3D; make(map[string]int)\n\tm[&quot;one&quot;] &#x3D; 1\n\tm[&quot;two&quot;] &#x3D; 2\n\tfmt.Println(m)           &#x2F;&#x2F; map[one:1 two:2]\n\tfmt.Println(len(m))      &#x2F;&#x2F; 2\n\tfmt.Println(m[&quot;one&quot;])    &#x2F;&#x2F; 1\n\tfmt.Println(m[&quot;unknow&quot;]) &#x2F;&#x2F; 0\n\n\tr, ok :&#x3D; m[&quot;unknow&quot;]\n\tfmt.Println(r, ok) &#x2F;&#x2F; 0 false\n\n\tdelete(m, &quot;one&quot;)\n\n\tm2 :&#x3D; map[string]int&#123;&quot;one&quot;: 1, &quot;two&quot;: 2&#125;\n\tvar m3 &#x3D; map[string]int&#123;&quot;one&quot;: 1, &quot;two&quot;: 2&#125;\n\tfmt.Println(m2, m3)\n&#125;</code></pre>\n\n<h4 id=\"Range\"><a href=\"#Range\" class=\"headerlink\" title=\"Range\"></a>Range</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc main() &#123;\n\tnums :&#x3D; []int&#123;2, 3, 4&#125;\n\tsum :&#x3D; 0\n\tfor i, num :&#x3D; range nums &#123;\n\t\tsum +&#x3D; num\n\t\tif num &#x3D;&#x3D; 2 &#123;\n\t\t\tfmt.Println(&quot;index:&quot;, i, &quot;num:&quot;, num) &#x2F;&#x2F; index: 0 num: 2\n\t\t&#125;\n\t&#125;\n\tfmt.Println(sum) &#x2F;&#x2F; 9\n\n\tm :&#x3D; map[string]string&#123;&quot;a&quot;: &quot;A&quot;, &quot;b&quot;: &quot;B&quot;&#125;\n\tfor k, v :&#x3D; range m &#123;\n\t\tfmt.Println(k, v) &#x2F;&#x2F; b 8; a A\n\t&#125;\n\tfor k :&#x3D; range m &#123;\n\t\tfmt.Println(&quot;key&quot;, k) &#x2F;&#x2F; key a; key b\n\t&#125;\n&#125;</code></pre>\n\n<h4 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc add(a int, b int) int &#123;\n\treturn a + b\n&#125;\n\nfunc add2(a, b int) int &#123;\n\treturn a + b\n&#125;\n\nfunc exists(m map[string]string, k string) (v string, ok bool) &#123;\n\tv, ok &#x3D; m[k]\n\treturn v, ok\n&#125;\n\nfunc main() &#123;\n\tres :&#x3D; add(1, 2)\n\tfmt.Println(res) &#x2F;&#x2F; 3\n\n\tv, ok :&#x3D; exists(map[string]string&#123;&quot;a&quot;: &quot;A&quot;&#125;, &quot;a&quot;)\n\tfmt.Println(v, ok) &#x2F;&#x2F; A True\n&#125;</code></pre>\n\n<h4 id=\"指针\"><a href=\"#指针\" class=\"headerlink\" title=\"指针\"></a>指针</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\nfunc add2(n int) &#123;\n\tn +&#x3D; 2\n&#125;\n\nfunc add2ptr(n *int) &#123;\n\t*n +&#x3D; 2\n&#125;\n\nfunc main() &#123;\n\tn :&#x3D; 5\n\tadd2(n)\n\tfmt.Println(n) &#x2F;&#x2F; 5\n\tadd2ptr(&amp;n)\n\tfmt.Println(n) &#x2F;&#x2F; 7\n&#125;</code></pre>\n\n<h4 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\ntype user struct &#123;\n\tname     string\n\tpassword string\n&#125;\n\nfunc main() &#123;\n\ta :&#x3D; user&#123;name: &quot;wang&quot;, password: &quot;1024&quot;&#125;\n\tb :&#x3D; user&#123;&quot;wang&quot;, &quot;1024&quot;&#125;\n\tc :&#x3D; user&#123;name: &quot;wang&quot;&#125;\n\tc.password &#x3D; &quot;1024&quot;\n\tvar d user\n\td.name &#x3D; &quot;wang&quot;\n\td.password &#x3D; &quot;1024&quot;\n\n\tfmt.Println(a, b, c, d)           &#x2F;&#x2F; &#123;wang 1024&#125; &#123;wang 1024&#125; &#123;wang 1024&#125; &#123;wang 1024&#125;\n\tfmt.Println(checkPassword(a, &quot;haha&quot;))   &#x2F;&#x2F; false\n\tfmt.Println(checkPassword2(&amp;a, &quot;haha&quot;)) &#x2F;&#x2F; false\n&#125;\n\nfunc checkPassword(u user, password string) bool &#123;\n\treturn u.password &#x3D;&#x3D; password\n&#125;\n\nfunc checkPassword2(u *user, password string) bool &#123;\n\treturn u.password &#x3D;&#x3D; password\n&#125;</code></pre>\n\n<h4 id=\"结构体方法\"><a href=\"#结构体方法\" class=\"headerlink\" title=\"结构体方法\"></a>结构体方法</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\ntype user struct &#123;\n\tname     string\n\tpassword string\n&#125;\n\nfunc (u user) checkPassword(password string) bool &#123;\n\treturn u.password &#x3D;&#x3D; password\n&#125;\n\nfunc (u *user) resetPassword(password string) &#123;\n\tu.password &#x3D; password\n&#125;\n\nfunc main() &#123;\n\ta :&#x3D; user&#123;name: &quot;wang&quot;, password: &quot;1024&quot;&#125;\n\ta.resetPassword(&quot;2048&quot;)\n\tfmt.Println(a.checkPassword(&quot;2048&quot;)) &#x2F;&#x2F; true\n&#125;</code></pre>\n\n<h4 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;errors&quot;\n\t&quot;fmt&quot;\n)\n\ntype user struct &#123;\n\tname     string\n\tpassword string\n&#125;\n\nfunc findUser(users []user, name string) (v *user, err error) &#123;\n\tfor _, u :&#x3D; range users &#123;\n\t\tif u.name &#x3D;&#x3D; name &#123;\n\t\t\treturn &amp;u, nil\n\t\t&#125;\n\t&#125;\n\treturn nil, errors.New(&quot;not found&quot;)\n&#125;\n\nfunc main() &#123;\n\tu, err :&#x3D; findUser([]user&#123;&#123;&quot;wang&quot;, &quot;1024&quot;&#125;&#125;, &quot;wang&quot;)\n\tif err !&#x3D; nil &#123;\n\t\tfmt.Println(err)\n\t\treturn\n\t&#125;\n\tfmt.Println(u.name) &#x2F;&#x2F; wang\n\n\tif u, err :&#x3D; findUser([]user&#123;&#123;&quot;wang&quot;, &quot;1024&quot;&#125;&#125;, &quot;li&quot;); err !&#x3D; nil &#123;\n\t\tfmt.Println(err) &#x2F;&#x2F; not found\n\t\treturn\n\t&#125; else &#123;\n\t\tfmt.Println(u.name)\n\t&#125;\n&#125;</code></pre>\n\n<h4 id=\"字符串操作\"><a href=\"#字符串操作\" class=\"headerlink\" title=\"字符串操作\"></a>字符串操作</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;strings&quot;\n)\n\nfunc main() &#123;\n\ta :&#x3D; &quot;hello&quot;\n\tfmt.Println(strings.Contains(a, &quot;ll&quot;))                &#x2F;&#x2F; true\n\tfmt.Println(strings.Count(a, &quot;l&quot;))                    &#x2F;&#x2F; 2\n\tfmt.Println(strings.HasPrefix(a, &quot;he&quot;))               &#x2F;&#x2F; true\n\tfmt.Println(strings.HasSuffix(a, &quot;llo&quot;))              &#x2F;&#x2F; true\n\tfmt.Println(strings.Index(a, &quot;ll&quot;))                   &#x2F;&#x2F; 2\n\tfmt.Println(strings.Join([]string&#123;&quot;he&quot;, &quot;llo&quot;&#125;, &quot;-&quot;)) &#x2F;&#x2F; he-llo\n\tfmt.Println(strings.Repeat(a, 2))                     &#x2F;&#x2F; hellohello\n\tfmt.Println(strings.Replace(a, &quot;e&quot;, &quot;E&quot;, -1))         &#x2F;&#x2F; hEllo\n\tfmt.Println(strings.Split(&quot;a-b-c&quot;, &quot;-&quot;))              &#x2F;&#x2F; [a b c]\n\tfmt.Println(strings.ToLower(a))                       &#x2F;&#x2F; hello\n\tfmt.Println(strings.ToUpper(a))                       &#x2F;&#x2F; HELLO\n\tfmt.Println(len(a))                                   &#x2F;&#x2F; 5\n\tb :&#x3D; &quot;你好&quot;\n\tfmt.Println(len(b)) &#x2F;&#x2F; 6\n&#125;</code></pre>\n\n<h4 id=\"字符串格式化\"><a href=\"#字符串格式化\" class=\"headerlink\" title=\"字符串格式化\"></a>字符串格式化</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport &quot;fmt&quot;\n\ntype point struct &#123;\n\tx, y int\n&#125;\n\nfunc main() &#123;\n\ts :&#x3D; &quot;hello&quot;\n\tn :&#x3D; 123\n\tp :&#x3D; point&#123;1, 2&#125;\n\tfmt.Println(s, n) &#x2F;&#x2F; hello 123\n\tfmt.Println(p)    &#x2F;&#x2F; &#123;1 2&#125;\n\n\tfmt.Printf(&quot;s&#x3D;%v\\n&quot;, s)  &#x2F;&#x2F; s&#x3D;hello\n\tfmt.Printf(&quot;n&#x3D;%v\\n&quot;, n)  &#x2F;&#x2F; n&#x3D;123\n\tfmt.Printf(&quot;p&#x3D;%v\\n&quot;, p)  &#x2F;&#x2F; p&#x3D;&#123;1 2&#125;\n\tfmt.Printf(&quot;p&#x3D;%+v\\n&quot;, p) &#x2F;&#x2F; p&#x3D;&#123;x:1 y:2&#125;\n\tfmt.Printf(&quot;p&#x3D;%#v\\n&quot;, p) &#x2F;&#x2F; p&#x3D;main.point&#123;x:1, y:2&#125;\n\n\tf :&#x3D; 3.141592653\n\tfmt.Println(f)          &#x2F;&#x2F; 3.141592653\n\tfmt.Printf(&quot;%.2f\\n&quot;, f) &#x2F;&#x2F; 3.14\n&#125;</code></pre>\n\n<h4 id=\"JSON处理\"><a href=\"#JSON处理\" class=\"headerlink\" title=\"JSON处理\"></a>JSON处理</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;encoding&#x2F;json&quot;\n\t&quot;fmt&quot;\n)\n\ntype userInfo struct &#123;\n\tName  string\n\tAge   int &#96;json:&quot;age&quot;&#96;\n\tHobby []string\n&#125;\n\nfunc main() &#123;\n\ta :&#x3D; userInfo&#123;Name: &quot;wang&quot;, Age: 18, Hobby: []string&#123;&quot;Golang&quot;, &quot;TypeScript&quot;&#125;&#125;\n\tbuf, err :&#x3D; json.Marshal(a)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tfmt.Println(buf)         &#x2F;&#x2F; [123 34 78 97...]\n\tfmt.Println(string(buf)) &#x2F;&#x2F; &#123;&quot;Name&quot;:&quot;wang&quot;,&quot;age&quot;:18,&quot;Hobby&quot;:[&quot;Golang&quot;,&quot;TypeScript&quot;]&#125;\n\n\tbuf, err &#x3D; json.MarshalIndent(a, &quot;&quot;, &quot;\\t&quot;)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tfmt.Println(string(buf))\n\n\tvar b userInfo\n\terr &#x3D; json.Unmarshal(buf, &amp;b)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tfmt.Printf(&quot;%#v\\n&quot;, b) &#x2F;&#x2F; main.userInfo&#123;Name:&quot;wang&quot;, Age:18, Hobby:[]string&#123;&quot;Golang&quot;, &quot;TypeScript&quot;&#125;&#125;\n&#125;</code></pre>\n\n<h4 id=\"时间处理\"><a href=\"#时间处理\" class=\"headerlink\" title=\"时间处理\"></a>时间处理</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;time&quot;\n)\n\nfunc main() &#123;\n\tnow :&#x3D; time.Now()\n\tfmt.Println(now) &#x2F;&#x2F; 2022-03-27 18:04:59.433297 +0800 CST m&#x3D;+0.000087933\n\tt :&#x3D; time.Date(2022, 3, 27, 1, 25, 36, 0, time.UTC)\n\tt2 :&#x3D; time.Date(2022, 3, 27, 2, 30, 36, 0, time.UTC)\n\tfmt.Println(t) &#x2F;&#x2F; 2022-03-27 01:25:36 +0000 UTC\n\tfmt.Println(t.Year(), t.Month(), t.Day(), t.Hour(), t.Minute()) &#x2F;&#x2F; 2022 March 27 1 25\n\tfmt.Println(t.Format(&quot;2006-01-02 15:04:05&quot;)) &#x2F;&#x2F; 2022-03-27 01:25:36\n\tdiff :&#x3D; t2.Sub(t)\n\tfmt.Println(diff)   &#x2F;&#x2F; 1h5m0s\n\tfmt.Println(diff.Minutes(), diff.Seconds()) &#x2F;&#x2F; 65 3900\n\tt3, err :&#x3D; time.Parse(&quot;2006-01-02 15:04:05&quot;, &quot;2022-03-27 01:25:36&quot;)\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tfmt.Println(t3 &#x3D;&#x3D; t)    &#x2F;&#x2F; true\n\tfmt.Println(now.Unix()) &#x2F;&#x2F; 1648738080\n&#125;</code></pre>\n\n<h4 id=\"数字解析\"><a href=\"#数字解析\" class=\"headerlink\" title=\"数字解析\"></a>数字解析</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;strconv&quot;\n)\n\nfunc main() &#123;\n\tf, _ :&#x3D; strconv.ParseFloat(&quot;1.234&quot;, 64)\n\tfmt.Println(f) &#x2F;&#x2F; 1.234\n\n\tn, _ :&#x3D; strconv.ParseInt(&quot;111&quot;, 10, 64)\n\tfmt.Println(n) &#x2F;&#x2F; 111\n\n\tn, _ &#x3D; strconv.ParseInt(&quot;0x1000&quot;, 0, 64)\n\tfmt.Println(n) &#x2F;&#x2F; 4096\n\n\tn2, _ :&#x3D; strconv.Atoi(&quot;123&quot;)\n\tfmt.Println(n2) &#x2F;&#x2F; 123\n\n\tn2, err :&#x3D; strconv.Atoi(&quot;AAA&quot;)\n\tfmt.Println(n2, err) &#x2F;&#x2F; 0 strconv.Atoi: parsing &quot;AAA&quot;: invalid syntax\n&#125;</code></pre>\n\n<h4 id=\"进程信息\"><a href=\"#进程信息\" class=\"headerlink\" title=\"进程信息\"></a>进程信息</h4><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">package main\n\nimport (\n\t&quot;fmt&quot;\n\t&quot;os&quot;\n\t&quot;os&#x2F;exec&quot;\n)\n\nfunc main() &#123;\n\t&#x2F;&#x2F; go run example&#x2F;20-env&#x2F;main.go a b c d\n\tfmt.Println(os.Args)    &#x2F;&#x2F; [&#x2F;var&#x2F;folders&#x2F;8p&#x2F;n34xxfnx38dg8bv_x8l62t_m0000gn&#x2F;T&#x2F;go-build3406981276&#x2F;b001&#x2F;exe&#x2F;main a b c d]\n\tfmt.Println(os.Getenv(&quot;PATH&quot;)) &#x2F;&#x2F; &#x2F;usr&#x2F;local&#x2F;go&#x2F;bin...\n\tfmt.Println(os.Setenv(&quot;AA&quot;, &quot;BB&quot;))\n\n\tbuf, err :&#x3D; exec.Command(&quot;grep&quot;, &quot;127.0.0.1&quot;, &quot;&#x2F;etc&#x2F;hosts&quot;).CombinedOutput()\n\tif err !&#x3D; nil &#123;\n\t\tpanic(err)\n\t&#125;\n\tfmt.Println(string(buf)) &#x2F;&#x2F; 127.0.0.1       localhost\n&#125;</code></pre>\n\n","feature":true,"text":"DAY1 Go 语言基础语法走进Go语言基础语法什么是Go语言1.高性能、高并发 2.语法简单、学习曲线平缓 3.丰富的标准库 4.完善的工具链 5.静态链接 6.快速编译 7.跨平台 8.垃圾回收 示例： 哪些公司在使用Go语言 基础语法Hello Worldpackage m...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#DAY1-Go-%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">DAY1 Go 语言基础语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B5%B0%E8%BF%9BGo%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">走进Go语言基础语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFGo%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">什么是Go语言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%93%AA%E4%BA%9B%E5%85%AC%E5%8F%B8%E5%9C%A8%E4%BD%BF%E7%94%A8Go%E8%AF%AD%E8%A8%80\"><span class=\"toc-text\">哪些公司在使用Go语言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">基础语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Hello-World\"><span class=\"toc-text\">Hello World</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#If-else\"><span class=\"toc-text\">If else</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">循环</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Switch\"><span class=\"toc-text\">Switch</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">数组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%87%E7%89%87\"><span class=\"toc-text\">切片</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Map\"><span class=\"toc-text\">Map</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Range\"><span class=\"toc-text\">Range</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8C%87%E9%92%88\"><span class=\"toc-text\">指针</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">结构体</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">结构体方法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86\"><span class=\"toc-text\">错误处理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">字符串操作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96\"><span class=\"toc-text\">字符串格式化</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#JSON%E5%A4%84%E7%90%86\"><span class=\"toc-text\">JSON处理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86\"><span class=\"toc-text\">时间处理</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%97%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">数字解析</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">进程信息</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"Abysmiler","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6jU9s.jpg","link":"/","description":"落日沉溺于橘色的海，晚风沦陷于赤诚的爱。","socials":{"github":"https://github.com/Abysmiler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"OriginOs系统修改主题","uid":"507f0170f324980a8849269cf74aaad4","slug":"OriginOs系统修改主题","date":"2023-04-14T15:58:02.000Z","updated":"2023-05-26T06:14:20.987Z","comments":true,"path":"api/articles/OriginOs系统修改主题.json","keywords":null,"cover":null,"text":"本文章适用于IQOO NEO5 originOS 8.11.10系统下的主题修改。 一、i主题降级下载i主题降级工具 提取码：VMxN 具体降级过程，使用shizuku进行授权，选择相应版本即可降级。 二、主题包主题包位置/storage/emulated/0/.dwd/c/o/...","link":"","photos":[],"count_time":{"symbolsCount":161,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"Abysmiler","slug":"blog-author","avatar":"https://s1.ax1x.com/2023/03/28/pp6jU9s.jpg","link":"/","description":"落日沉溺于橘色的海，晚风沦陷于赤诚的爱。","socials":{"github":"https://github.com/Abysmiler","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}